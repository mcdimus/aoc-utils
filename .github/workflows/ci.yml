name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit

      - name: Run Detekt
        run: ./gradlew detekt --scan

      - name: Upload Detekt SARIF
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/detekt.sarif

      - name: Unit Tests
        run: ./gradlew test -x detekt --scan

      - name: Build
        run: ./gradlew build -x detekt -x test --scan

  release:
    if: |
      github.ref == 'refs/heads/master' 
      && github.event_name == 'push'
      && contains(github.event.commits.*.modified, '**/*.kt')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Tag the release
        id: tag
        run: |
          previousTagName=$(git describe --abbrev=0 --tags)
          echo "JRELEASER_PREVIOUS_TAG_NAME=$previousTagName" >> $GITHUB_ENV
          ./gradlew printVersion releaseVersion
          git push origin --tags

      - name: Release
        id: release
        run: |
          mkdir -p build/jreleaser
          ./gradlew jreleaserRelease --scan

      - name: Upload JReleaser trace log
        if: ${{ failure() && steps.release.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-trace-log
          path: build/jreleaser/trace.log

      - name: Delete tag on failure
        if: ${{ steps.release.conclusion == 'failure' && steps.tag.conclusion == 'success' }}
        run: |
          tagName=$(git describe --abbrev=0 --tags)
          git push origin --delete $tagName

      - name: Publish
        run: ./gradlew publish --scan

      - name: Delete Package Versions
        uses: actions/delete-package-versions@v5.0.0
        with:
          package-name: 'com.github.mcdimus.aoc.aoc-utils'
          package-type: 'maven'
          min-versions-to-keep: 5
