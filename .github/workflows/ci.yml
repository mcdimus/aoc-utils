name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Run Detekt
        run: ./gradlew detekt
        env:
          GITHUB_DEPENDENCY_GRAPH_ENABLED: false

      - name: Upload Detekt SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/detekt.sarif

      - name: Unit Tests
        run: ./gradlew test -x detekt

      - name: Build
        run: ./gradlew build -x detekt -x test

      - name: Print modified files
        run: |
          echo '${{ toJSON(github.event.commits[0].modified[*]) }}' | jq
          echo '${{ toJSON(github.event.commits.*.modified) }}' | jq

  release:
    if: |
      github.ref == 'refs/heads/master' 
      && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed main Kotlin files
        id: changed-kt-files
        uses: tj-actions/changed-files@v45
        with:
          files: '**/main/**/*.kt'
          since_last_remote_commit: false
          base_sha: $(git describe --tags --abbrev=0)

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-kt-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Set up JDK 21
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        uses: gradle/actions/setup-gradle@v4

      - name: Tag the release
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        id: tag
        run: |
          previousTagName=$(git describe --abbrev=0 --tags)
          echo "JRELEASER_PREVIOUS_TAG_NAME=$previousTagName" >> $GITHUB_ENV
          ./gradlew printVersion releaseVersion
          git push origin --tags

      - name: Release
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        id: release
        run: |
          mkdir -p build/jreleaser
          ./gradlew jreleaserRelease --stacktrace

      - name: Upload JReleaser trace log
        if: ${{ failure() && steps.release.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-trace-log
          path: build/jreleaser/trace.log

      - name: Delete tag on failure
        if: ${{ failure() && steps.release.conclusion == 'failure' && steps.tag.conclusion == 'success' }}
        run: |
          tagName=$(git describe --abbrev=0 --tags)
          git push origin --delete $tagName

      - name: Publish
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        run: ./gradlew publish

      - name: Delete Package Versions
        if: steps.changed-kt-files.outputs.any_changed == 'true'
        uses: actions/delete-package-versions@v5.0.0
        with:
          package-name: 'com.github.mcdimus.aoc.aoc-utils'
          package-type: 'maven'
          min-versions-to-keep: 5
